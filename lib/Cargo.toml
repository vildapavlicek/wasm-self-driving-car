[package]
name = "simulation"
version = "0.1.0"
authors = ["Vilém Pavlíček <vildapavlicek@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

#[features]
#default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.63", features = ["serde-serialize"]}
js-sys = "0.3.57"
#web-sys = { version = "0.3.57", features = ["window", "CanvasRenderingContext2d", "HtmlCanvasElement", "Document", "Element"] }
console_error_panic_hook = { version = "0.1.6" }
itertools = "0.10.3"
serde = { version = "1.0.137", features = ["derive"] }
serde_json = "1.0.81"
tracing = "0.1.35"
gloo-storage = "0.2.1"
tap = "1.0.1"


# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
#console_error_panic_hook = { version = "0.1.6", optional = true }


# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.web-sys]
version = "0.3.57"
features = [
  'CanvasRenderingContext2d',
  'CssStyleDeclaration',
  'Document',
  'Element',
  'EventTarget',
  'HtmlCanvasElement',
  'HtmlElement',
  'MouseEvent',
  'Node',
  'Window',
  'console',
  'Storage'
]


[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
